%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-

{erl_opts, [debug_info, {d, 'USE_STACKTRACES'}]}.
{src_dirs, ["src", "src/controllers"]}.
{shell, [{config, "./config/dev_sys.config.src"}]}.

{erlydtl_opts, [{doc_root, "src/views"},
                {recursive, true},
                {libraries, [
                             {nova_erlydtl_inventory, nova_erlydtl_inventory}
                            ]},
                {default_libraries, [nova_erlydtl_inventory]}
               ]}.

{deps, [
        {nova, ".*", {git, "https://github.com/novaframework/nova.git", {branch, os:getenv("NOVA_BRANCH", "master")}}}
       ]}.


%% Release profiles
%% To create a release just run
%% rebar3 as prod release
{relx, [{release, {nova_request_app, "0.1.0"},
         [nova_request_app,
          sasl]},
        {mode, dev},
        {sys_config_src, "./config/dev_sys.config.src"},
        {vm_args_src, "./config/vm.args.src"}
       ]}.

{profiles, [{prod, [{relx,
                     [{mode, prod},
                      {sys_config_src, "./config/prod_sys.config.src"}]}]},
                    {test, [
                      {erl_opts, [{d, 'USE_STACKTRACES'}]},
                      {deps, [
                          {gun, "2.0.1"}
                      ]},
                      {cover_enabled, true},
                      {cover_opts, [verbose]},
                      {ct_opts, [{sys_config, "./config/dev_sys.config.src"}]},
                      {extra_src_dirs, []},
                      {xref_extra_paths, []}
                  ]}]}.

%% Plugins for rebar3
{plugins, [
           {rebar3_erlydtl_plugin, ".*",
            {git, "https://github.com/tsloughter/rebar3_erlydtl_plugin.git", {branch, "master"}}},
           {rebar3_erldb_plugin, ".*",
            {git, "https://github.com/erldb/rebar3_erldb_plugin.git", {branch, "master"}}},
           {rebar3_nova, ".*",
            {git, "https://github.com/novaframework/rebar3_nova.git", {branch, "master"}}}
          ]}.

{provider_hooks, [
                  {pre, [{compile, {erlydtl, compile}}]}
                 ]}.
